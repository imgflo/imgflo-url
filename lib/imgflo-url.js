// Generated by CoffeeScript 1.9.2
(function() {
  'use strict';
  var MD5, imgflo, path, qs, url;

  MD5 = require('md5');

  qs = require('query-string');

  path = require('path');

  url = require('url');

  imgflo = function(config, graph, params, format) {
    var extension, input, key, match, parsed, query, secret, server, token;
    if (config == null) {
      throw new Error('imgflo config object not provided');
    }
    server = config.server, key = config.key, secret = config.secret;
    if (server == null) {
      throw new Error('imgflo config must contain a "server" key');
    }
    if (key == null) {
      throw new Error('imgflo config must contain a "key" key');
    }
    if (secret == null) {
      throw new Error('imgflo config must contain a "secret" key');
    }
    if (graph == null) {
      throw new Error('imgflo graph name not provided');
    }
    if (params == null) {
      throw new Error('imgflo params not provided');
    }
    input = params.input;
    if (input == null) {
      throw new Error('imgflo params must contain an "input" key');
    }
    parsed = url.parse(input);
    if (parsed.protocol === 'data:') {
      return input;
    }
    match = path.extname(parsed.pathname).match(/^\.(\w+)/);
    extension = match != null ? match[1].toLowerCase() : void 0;
    if (extension === 'gif') {
      return input;
    }
    if (format == null) {
      format = extension;
    }
    if (format != null) {
      graph = graph + "." + format;
    }
    query = "?" + (qs.stringify(params));
    token = MD5("" + graph + query + secret);
    return server + "graph/" + key + "/" + token + "/" + graph + query;
  };

  module.exports = imgflo;

}).call(this);
